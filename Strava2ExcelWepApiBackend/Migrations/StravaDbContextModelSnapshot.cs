// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Strava2ExcelWebApiBackend.Data;

#nullable disable

namespace Strava2ExcelWebApiBackend.Migrations
{
    [DbContext(typeof(StravaDbContext))]
    partial class StravaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Strava2ExcelWebApiBackend.Models.Activity", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<int>("achievement_count")
                        .HasColumnType("int");

                    b.Property<int>("athleteId")
                        .HasColumnType("int");

                    b.Property<int>("athlete_count")
                        .HasColumnType("int");

                    b.Property<double?>("average_heartrate")
                        .HasColumnType("float");

                    b.Property<double>("average_speed")
                        .HasColumnType("float");

                    b.Property<double?>("average_watts")
                        .HasColumnType("float");

                    b.Property<int>("comment_count")
                        .HasColumnType("int");

                    b.Property<bool>("commute")
                        .HasColumnType("bit");

                    b.Property<bool?>("device_watts")
                        .HasColumnType("bit");

                    b.Property<bool>("display_hide_heartrate_option")
                        .HasColumnType("bit");

                    b.Property<double>("distance")
                        .HasColumnType("float");

                    b.Property<int>("elapsed_time")
                        .HasColumnType("int");

                    b.Property<double?>("elev_high")
                        .HasColumnType("float");

                    b.Property<double?>("elev_low")
                        .HasColumnType("float");

                    b.Property<string>("end_latlng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("external_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("flagged")
                        .HasColumnType("bit");

                    b.Property<bool>("from_accepted_tag")
                        .HasColumnType("bit");

                    b.Property<string>("gear_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("has_heartrate")
                        .HasColumnType("bit");

                    b.Property<bool>("has_kudoed")
                        .HasColumnType("bit");

                    b.Property<bool>("heartrate_opt_out")
                        .HasColumnType("bit");

                    b.Property<double?>("kilojoules")
                        .HasColumnType("float");

                    b.Property<int>("kudos_count")
                        .HasColumnType("int");

                    b.Property<string>("location_city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location_country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location_state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("manual")
                        .HasColumnType("bit");

                    b.Property<int>("mapid")
                        .HasColumnType("int");

                    b.Property<double?>("max_heartrate")
                        .HasColumnType("float");

                    b.Property<double>("max_speed")
                        .HasColumnType("float");

                    b.Property<int>("moving_time")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("photo_count")
                        .HasColumnType("int");

                    b.Property<int>("pr_count")
                        .HasColumnType("int");

                    b.Property<bool>("private")
                        .HasColumnType("bit");

                    b.Property<int>("resource_state")
                        .HasColumnType("int");

                    b.Property<string>("sport_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("start_date_local")
                        .HasColumnType("datetime2");

                    b.Property<string>("start_latlng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("total_elevation_gain")
                        .HasColumnType("float");

                    b.Property<int>("total_photo_count")
                        .HasColumnType("int");

                    b.Property<bool>("trainer")
                        .HasColumnType("bit");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("upload_id")
                        .HasColumnType("bigint");

                    b.Property<double>("utc_offset")
                        .HasColumnType("float");

                    b.Property<string>("visibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("workout_type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("athleteId");

                    b.HasIndex("mapid");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("Strava2ExcelWebApiBackend.Models.Athlete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Athletes");
                });

            modelBuilder.Entity("Strava2ExcelWebApiBackend.Models.Map", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("resource_state")
                        .HasColumnType("int");

                    b.Property<string>("summary_polyline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Map");
                });

            modelBuilder.Entity("Strava2ExcelWebApiBackend.Models.Activity", b =>
                {
                    b.HasOne("Strava2ExcelWebApiBackend.Models.Athlete", "athlete")
                        .WithMany()
                        .HasForeignKey("athleteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Strava2ExcelWebApiBackend.Models.Map", "map")
                        .WithMany()
                        .HasForeignKey("mapid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("athlete");

                    b.Navigation("map");
                });
#pragma warning restore 612, 618
        }
    }
}
