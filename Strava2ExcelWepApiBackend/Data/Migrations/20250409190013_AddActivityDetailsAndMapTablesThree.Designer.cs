// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Strava2ExcelWebApiBackend.Data;

#nullable disable

namespace Strava2ExcelWebApiBackend.Data.Migrations
{
    [DbContext(typeof(StravaDbContext))]
    [Migration("20250409190013_AddActivityDetailsAndMapTablesThree")]
    partial class AddActivityDetailsAndMapTablesThree
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Strava2ExcelWebApiBackend.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<double?>("AverageHeartrate")
                        .HasColumnType("float");

                    b.Property<double>("AverageSpeed")
                        .HasColumnType("float");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<double?>("MaxHeartrate")
                        .HasColumnType("float");

                    b.Property<int>("MovingTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDateLocal")
                        .HasColumnType("datetime2");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalElevationGain")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Strava2ExcelWebApiBackend.Models.ActivityDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AchievementCount")
                        .HasColumnType("int");

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<int>("AthleteCount")
                        .HasColumnType("int");

                    b.Property<int>("AthleteId")
                        .HasColumnType("int");

                    b.Property<double?>("AverageCadence")
                        .HasColumnType("float");

                    b.Property<double>("AverageSpeed")
                        .HasColumnType("float");

                    b.Property<double?>("AverageWatts")
                        .HasColumnType("float");

                    b.Property<double?>("Calories")
                        .HasColumnType("float");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<bool>("Commute")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DeviceWatts")
                        .HasColumnType("bit");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<int>("ElapsedTime")
                        .HasColumnType("int");

                    b.Property<double?>("ElevHigh")
                        .HasColumnType("float");

                    b.Property<double?>("ElevLow")
                        .HasColumnType("float");

                    b.Property<string>("EmbedToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndLatlng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Flagged")
                        .HasColumnType("bit");

                    b.Property<string>("GearId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasKudoed")
                        .HasColumnType("bit");

                    b.Property<double?>("Kilojoules")
                        .HasColumnType("float");

                    b.Property<int>("KudosCount")
                        .HasColumnType("int");

                    b.Property<string>("LapsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Manual")
                        .HasColumnType("bit");

                    b.Property<string>("MapId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaxSpeed")
                        .HasColumnType("float");

                    b.Property<int?>("MaxWatts")
                        .HasColumnType("int");

                    b.Property<int>("MovingTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhotoCount")
                        .HasColumnType("int");

                    b.Property<string>("Polyline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrCount")
                        .HasColumnType("int");

                    b.Property<bool>("Private")
                        .HasColumnType("bit");

                    b.Property<int>("ResourceState")
                        .HasColumnType("int");

                    b.Property<string>("SegmentEffortsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SplitsMetricJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDateLocal")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartLatlng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryPolyline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalElevationGain")
                        .HasColumnType("float");

                    b.Property<int>("TotalPhotoCount")
                        .HasColumnType("int");

                    b.Property<bool>("Trainer")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UploadId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<double?>("UtcOffset")
                        .HasColumnType("float");

                    b.Property<string>("Visibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeightedAverageWatts")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityDetails");
                });

            modelBuilder.Entity("Strava2ExcelWebApiBackend.Models.Map", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("EndLatlng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MapId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Polyline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartLatlng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("Strava2ExcelWebApiBackend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Athletes");
                });
#pragma warning restore 612, 618
        }
    }
}
